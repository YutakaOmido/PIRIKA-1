//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/igormaznitsa/prol/logic/PreparedGoal.java
//
//  Created by katsura on 14/04/13.
//

#include "IOSClass.h"
#include "IOSFloatArray.h"
#include "IOSIntArray.h"
#include "IOSObjectArray.h"
#include "com/igormaznitsa/prol/data/Term.h"
#include "com/igormaznitsa/prol/data/TermFloat.h"
#include "com/igormaznitsa/prol/data/TermInteger.h"
#include "com/igormaznitsa/prol/data/Var.h"
#include "com/igormaznitsa/prol/logic/Goal.h"
#include "com/igormaznitsa/prol/logic/PreparedGoal.h"
#include "com/igormaznitsa/prol/logic/ProlContext.h"
#include "com/igormaznitsa/prol/parser/ProlTreeBuilder.h"
#include "com/igormaznitsa/prol/trace/TraceListener.h"
#include "com/igormaznitsa/prol/utils/Utils.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation ComIgormaznitsaProlLogicPreparedGoal

- (id<JavaUtilList>)getOrderedVars {
  return self->orderedVars_;
}

- (void)setOrderedVarsWithJavaUtilList:(id<JavaUtilList>)list {
  self->orderedVars_ = list;
}

- (ComIgormaznitsaProlDataTerm *)getParsedGoal {
  return self->parsedGoal_;
}

- (void)setParsedGoalWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)goal {
  self->parsedGoal_ = goal;
}

- (ComIgormaznitsaProlLogicProlContext *)getContext {
  return self->context_;
}

- (void)setContextWithComIgormaznitsaProlLogicProlContext:(ComIgormaznitsaProlLogicProlContext *)context {
  self->context_ = context;
}

- (NSString *)getGoalAsText {
  return self->goalAsText_;
}

- (void)setGoalAsTextWithNSString:(NSString *)text {
  self->goalAsText_ = text;
}

- (id)initWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)goal
  withComIgormaznitsaProlLogicProlContext:(ComIgormaznitsaProlLogicProlContext *)workContext {
  return [self initComIgormaznitsaProlLogicPreparedGoalWithComIgormaznitsaProlDataTerm:goal withComIgormaznitsaProlLogicProlContext:workContext withComIgormaznitsaProlTraceTraceListener:nil];
}

- (id)initComIgormaznitsaProlLogicPreparedGoalWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)goal
                                      withComIgormaznitsaProlLogicProlContext:(ComIgormaznitsaProlLogicProlContext *)workContext
                                    withComIgormaznitsaProlTraceTraceListener:(id<ComIgormaznitsaProlTraceTraceListener>)tracer {
  if (self = [super init]) {
    if (goal == nil || workContext == nil) {
      @throw [[JavaLangNullPointerException alloc] initWithNSString:@"Null argument detected"];
    }
    self->tracer_ = tracer;
    [self setContextWithComIgormaznitsaProlLogicProlContext:workContext];
    [self setParsedGoalWithComIgormaznitsaProlDataTerm:goal];
    [self setOrderedVarsWithJavaUtilList:[JavaUtilCollections EMPTY_LIST]];
  }
  return self;
}

- (id)initWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)goal
  withComIgormaznitsaProlLogicProlContext:(ComIgormaznitsaProlLogicProlContext *)workContext
withComIgormaznitsaProlTraceTraceListener:(id<ComIgormaznitsaProlTraceTraceListener>)tracer {
  return [self initComIgormaznitsaProlLogicPreparedGoalWithComIgormaznitsaProlDataTerm:goal withComIgormaznitsaProlLogicProlContext:workContext withComIgormaznitsaProlTraceTraceListener:tracer];
}

- (id)initWithNSString:(NSString *)goal
withComIgormaznitsaProlLogicProlContext:(ComIgormaznitsaProlLogicProlContext *)workContext {
  return [self initComIgormaznitsaProlLogicPreparedGoalWithNSString:goal withComIgormaznitsaProlLogicProlContext:workContext withComIgormaznitsaProlTraceTraceListener:nil];
}

- (id)initComIgormaznitsaProlLogicPreparedGoalWithNSString:(NSString *)goal
                   withComIgormaznitsaProlLogicProlContext:(ComIgormaznitsaProlLogicProlContext *)workContext
                 withComIgormaznitsaProlTraceTraceListener:(id<ComIgormaznitsaProlTraceTraceListener>)tracer {
  if (self = [super init]) {
    if (goal == nil || workContext == nil) {
      @throw [[JavaLangNullPointerException alloc] initWithNSString:@"Needed argument is null"];
    }
    self->tracer_ = tracer;
    [self setContextWithComIgormaznitsaProlLogicProlContext:workContext];
    id<JavaUtilList> parametrizedNames = [[JavaUtilArrayList alloc] init];
    JavaLangStringBuilder *builder = [[JavaLangStringBuilder alloc] initWithNSString:goal];
    int varIndex = 1000;
    while (YES) {
      int indexOfOrderedVar = [builder indexOfWithNSString:@"{?}"];
      if (indexOfOrderedVar < 0) {
        break;
      }
      NSString *varName = [NSString stringWithFormat:@"_Ord%d", varIndex];
      varIndex++;
      (void) [((JavaLangStringBuilder *) nil_chk([builder delete__WithInt:indexOfOrderedVar withInt:indexOfOrderedVar + 3])) insertWithInt:indexOfOrderedVar withNSString:[NSString stringWithFormat:@" %@ ", varName]];
      [parametrizedNames addWithId:varName];
    }
    [self setGoalAsTextWithNSString:[builder description]];
    [self setOrderedVarsWithJavaUtilList:parametrizedNames];
    ComIgormaznitsaProlParserProlTreeBuilder *treebuilder = [[ComIgormaznitsaProlParserProlTreeBuilder alloc] initWithComIgormaznitsaProlLogicProlContext:[self getContext]];
    @try {
      [self setParsedGoalWithComIgormaznitsaProlDataTerm:[treebuilder readPhraseAndMakeTreeWithNSString:[self getGoalAsText]]];
    }
    @catch (JavaLangInterruptedException *ex) {
      @throw [[JavaIoIOException alloc] initWithNSString:@"Parsing was interrupted" withJavaLangThrowable:ex];
    }
  }
  return self;
}

- (id)initWithNSString:(NSString *)goal
withComIgormaznitsaProlLogicProlContext:(ComIgormaznitsaProlLogicProlContext *)workContext
withComIgormaznitsaProlTraceTraceListener:(id<ComIgormaznitsaProlTraceTraceListener>)tracer {
  return [self initComIgormaznitsaProlLogicPreparedGoalWithNSString:goal withComIgormaznitsaProlLogicProlContext:workContext withComIgormaznitsaProlTraceTraceListener:tracer];
}

- (ComIgormaznitsaProlDataTerm *)processGoalOnce {
  ComIgormaznitsaProlDataTerm *target = [((ComIgormaznitsaProlDataTerm *) nil_chk([self getParsedGoal])) makeClone];
  ComIgormaznitsaProlLogicGoal *goal = [[ComIgormaznitsaProlLogicGoal alloc] initWithComIgormaznitsaProlDataTerm:target withComIgormaznitsaProlLogicProlContext:[self getContext] withComIgormaznitsaProlTraceTraceListener:tracer_];
  return [goal solve];
}

- (ComIgormaznitsaProlLogicGoal *)forIntegerParametersWithIntArray:(IOSIntArray *)parameters {
  IOSObjectArray *termarray = [IOSObjectArray arrayWithLength:(int) [((IOSIntArray *) nil_chk(parameters)) count] type:[IOSClass classWithClass:[ComIgormaznitsaProlDataTerm class]]];
  for (int li = 0; li < (int) [parameters count]; li++) {
    (void) IOSObjectArray_Set(termarray, li, [[ComIgormaznitsaProlDataTermInteger alloc] initWithInt:IOSIntArray_Get(parameters, li)]);
  }
  return [self forParametersWithComIgormaznitsaProlDataTermArray:termarray];
}

- (ComIgormaznitsaProlLogicGoal *)forStringParametersWithNSStringArray:(IOSObjectArray *)parameters {
  IOSObjectArray *termarray = [IOSObjectArray arrayWithLength:(int) [((IOSObjectArray *) nil_chk(parameters)) count] type:[IOSClass classWithClass:[ComIgormaznitsaProlDataTerm class]]];
  for (int li = 0; li < (int) [parameters count]; li++) {
    (void) IOSObjectArray_Set(termarray, li, [[ComIgormaznitsaProlDataTerm alloc] initWithNSString:IOSObjectArray_Get(parameters, li)]);
  }
  return [self forParametersWithComIgormaznitsaProlDataTermArray:termarray];
}

- (ComIgormaznitsaProlLogicGoal *)forFloatParametersWithFloatArray:(IOSFloatArray *)parameters {
  IOSObjectArray *termarray = [IOSObjectArray arrayWithLength:(int) [((IOSFloatArray *) nil_chk(parameters)) count] type:[IOSClass classWithClass:[ComIgormaznitsaProlDataTerm class]]];
  for (int li = 0; li < (int) [parameters count]; li++) {
    (void) IOSObjectArray_Set(termarray, li, [[ComIgormaznitsaProlDataTermFloat alloc] initWithFloat:IOSFloatArray_Get(parameters, li)]);
  }
  return [self forParametersWithComIgormaznitsaProlDataTermArray:termarray];
}

- (ComIgormaznitsaProlLogicGoal *)forParametersWithComIgormaznitsaProlDataTermArray:(IOSObjectArray *)parameters {
  if ([((id<JavaUtilList>) nil_chk(orderedVars_)) size] != (int) [((IOSObjectArray *) nil_chk(parameters)) count]) {
    @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"Incompatible parameter number [%d!=%d", [orderedVars_ size], (int) [parameters count]]];
  }
  ComIgormaznitsaProlDataTerm *goalClone = [((ComIgormaznitsaProlDataTerm *) nil_chk([self getParsedGoal])) makeClone];
  id<JavaUtilList> varNames = [self getOrderedVars];
  int len = (int) [parameters count];
  for (int li = 0; li < len; li++) {
    NSString *varName = [((id<JavaUtilList>) nil_chk(varNames)) getWithInt:li];
    ComIgormaznitsaProlDataTerm *parameter = IOSObjectArray_Get(parameters, li);
    if (parameter == nil) {
      @throw [[JavaLangNullPointerException alloc] init];
    }
    ComIgormaznitsaProlDataVar *varTerm = [ComIgormaznitsaProlUtilsUtils findVarInsideTermWithComIgormaznitsaProlDataTerm:goalClone withNSString:varName];
    if (varTerm == nil) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"Can't find a variable for '%@' name", varName]];
    }
    [((ComIgormaznitsaProlDataVar *) nil_chk(varTerm)) setValueWithComIgormaznitsaProlDataTerm:parameter];
  }
  return [[ComIgormaznitsaProlLogicGoal alloc] initWithComIgormaznitsaProlDataTerm:goalClone withComIgormaznitsaProlLogicProlContext:[self getContext] withComIgormaznitsaProlTraceTraceListener:tracer_];
}

- (ComIgormaznitsaProlLogicGoal *)forParametersWithJavaUtilMap:(id<JavaUtilMap>)vars {
  if (vars == nil) {
    @throw [[JavaLangNullPointerException alloc] init];
  }
  ComIgormaznitsaProlDataTerm *goalClone = [((ComIgormaznitsaProlDataTerm *) nil_chk([self getParsedGoal])) makeClone];
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(vars)) entrySet])) {
    ComIgormaznitsaProlDataTerm *value = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
    ComIgormaznitsaProlDataVar *foundVar = [ComIgormaznitsaProlUtilsUtils findVarInsideTermWithComIgormaznitsaProlDataTerm:goalClone withNSString:[entry_ getKey]];
    if (foundVar == nil) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:[NSString stringWithFormat:@"Can't find variable for '%@' name", [entry_ getKey]]];
    }
    [((ComIgormaznitsaProlDataVar *) nil_chk(foundVar)) setValueWithComIgormaznitsaProlDataTerm:value];
  }
  return [[ComIgormaznitsaProlLogicGoal alloc] initWithComIgormaznitsaProlDataTerm:goalClone withComIgormaznitsaProlLogicProlContext:[self getContext] withComIgormaznitsaProlTraceTraceListener:tracer_];
}

- (ComIgormaznitsaProlLogicGoal *)getNonparametrizedGoalInstance {
  return [[ComIgormaznitsaProlLogicGoal alloc] initWithComIgormaznitsaProlDataTerm:[self getParsedGoal] withComIgormaznitsaProlLogicProlContext:[self getContext] withComIgormaznitsaProlTraceTraceListener:tracer_];
}

- (void)copyAllFieldsTo:(ComIgormaznitsaProlLogicPreparedGoal *)other {
  [super copyAllFieldsTo:other];
  other->context_ = context_;
  other->goalAsText_ = goalAsText_;
  other->orderedVars_ = orderedVars_;
  other->parsedGoal_ = parsedGoal_;
  other->tracer_ = tracer_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getOrderedVars", NULL, "Ljava.util.List;", 0x14, NULL },
    { "setOrderedVarsWithJavaUtilList:", "setOrderedVars", "V", 0x14, NULL },
    { "getParsedGoal", NULL, "Lcom.igormaznitsa.prol.data.Term;", 0x11, NULL },
    { "setParsedGoalWithComIgormaznitsaProlDataTerm:", "setParsedGoal", "V", 0x12, NULL },
    { "getContext", NULL, "Lcom.igormaznitsa.prol.logic.ProlContext;", 0x11, NULL },
    { "setContextWithComIgormaznitsaProlLogicProlContext:", "setContext", "V", 0x12, NULL },
    { "getGoalAsText", NULL, "Ljava.lang.String;", 0x11, NULL },
    { "setGoalAsTextWithNSString:", "setGoalAsText", "V", 0x12, NULL },
    { "initWithComIgormaznitsaProlDataTerm:withComIgormaznitsaProlLogicProlContext:", "PreparedGoal", NULL, 0x1, NULL },
    { "initWithComIgormaznitsaProlDataTerm:withComIgormaznitsaProlLogicProlContext:withComIgormaznitsaProlTraceTraceListener:", "PreparedGoal", NULL, 0x1, NULL },
    { "initWithNSString:withComIgormaznitsaProlLogicProlContext:", "PreparedGoal", NULL, 0x1, "Ljava.io.IOException;" },
    { "initWithNSString:withComIgormaznitsaProlLogicProlContext:withComIgormaznitsaProlTraceTraceListener:", "PreparedGoal", NULL, 0x1, "Ljava.io.IOException;" },
    { "processGoalOnce", NULL, "Lcom.igormaznitsa.prol.data.Term;", 0x11, "Ljava.lang.InterruptedException;" },
    { "forIntegerParametersWithIntArray:", "forIntegerParameters", "Lcom.igormaznitsa.prol.logic.Goal;", 0x91, NULL },
    { "forStringParametersWithNSStringArray:", "forStringParameters", "Lcom.igormaznitsa.prol.logic.Goal;", 0x91, NULL },
    { "forFloatParametersWithFloatArray:", "forFloatParameters", "Lcom.igormaznitsa.prol.logic.Goal;", 0x91, NULL },
    { "forParametersWithComIgormaznitsaProlDataTermArray:", "forParameters", "Lcom.igormaznitsa.prol.logic.Goal;", 0x91, NULL },
    { "forParametersWithJavaUtilMap:", "forParameters", "Lcom.igormaznitsa.prol.logic.Goal;", 0x11, NULL },
    { "getNonparametrizedGoalInstance", NULL, "Lcom.igormaznitsa.prol.logic.Goal;", 0x11, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "goalAsText_", NULL, 0x2, "Ljava.lang.String;" },
    { "context_", NULL, 0x2, "Lcom.igormaznitsa.prol.logic.ProlContext;" },
    { "parsedGoal_", NULL, 0x2, "Lcom.igormaznitsa.prol.data.Term;" },
    { "orderedVars_", NULL, 0x2, "Ljava.util.List;" },
    { "tracer_", NULL, 0x12, "Lcom.igormaznitsa.prol.trace.TraceListener;" },
  };
  static J2ObjcClassInfo _ComIgormaznitsaProlLogicPreparedGoal = { "PreparedGoal", "com.igormaznitsa.prol.logic", NULL, 0x1, 19, methods, 5, fields, 0, NULL};
  return &_ComIgormaznitsaProlLogicPreparedGoal;
}

@end
