//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/igormaznitsa/prol/exceptions/ProlForkExecutionException.java
//
//  Created by katsura on 14/04/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/igormaznitsa/prol/data/Term.h"
#include "com/igormaznitsa/prol/data/TermInteger.h"
#include "com/igormaznitsa/prol/data/TermStruct.h"
#include "com/igormaznitsa/prol/exceptions/ProlForkExecutionException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/util/Arrays.h"

@implementation ComIgormaznitsaProlExceptionsProlForkExecutionException

static ComIgormaznitsaProlDataTerm * ComIgormaznitsaProlExceptionsProlForkExecutionException_ERROR_TERM_;

+ (long long int)serialVersionUID {
  return ComIgormaznitsaProlExceptionsProlForkExecutionException_serialVersionUID;
}

+ (ComIgormaznitsaProlDataTerm *)ERROR_TERM {
  return ComIgormaznitsaProlExceptionsProlForkExecutionException_ERROR_TERM_;
}

- (IOSObjectArray *)getThrowables {
  return throwables_;
}

- (id)initWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)culprit
               withJavaLangThrowableArray:(IOSObjectArray *)causes {
  return [self initComIgormaznitsaProlExceptionsProlForkExecutionExceptionWithNSString:[NSString stringWithFormat:@"Error during a fork thread %@'", (causes != nil ? [JavaUtilArrays toStringWithNSObjectArray:causes] : @"[]")] withComIgormaznitsaProlDataTerm:culprit withJavaLangThrowableArray:causes];
}

- (id)initComIgormaznitsaProlExceptionsProlForkExecutionExceptionWithNSString:(NSString *)message
                                              withComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)culprit
                                                   withJavaLangThrowableArray:(IOSObjectArray *)causes {
  if (self = [super initWithNSString:message withComIgormaznitsaProlDataTerm:culprit]) {
    self->throwables_ = causes == nil ? [IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[JavaLangThrowable class]]] : causes;
  }
  return self;
}

- (id)initWithNSString:(NSString *)message
withComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)culprit
withJavaLangThrowableArray:(IOSObjectArray *)causes {
  return [self initComIgormaznitsaProlExceptionsProlForkExecutionExceptionWithNSString:message withComIgormaznitsaProlDataTerm:culprit withJavaLangThrowableArray:causes];
}

- (ComIgormaznitsaProlDataTerm *)getFunctorForErrorStruct {
  return ComIgormaznitsaProlExceptionsProlForkExecutionException_ERROR_TERM_;
}

- (ComIgormaznitsaProlDataTermStruct *)getAsStruct {
  ComIgormaznitsaProlDataTermStruct *result = [[ComIgormaznitsaProlDataTermStruct alloc] initWithComIgormaznitsaProlDataTerm:ComIgormaznitsaProlExceptionsProlForkExecutionException_ERROR_TERM_ withComIgormaznitsaProlDataTermArray:[IOSObjectArray arrayWithObjects:(id[]){ [[ComIgormaznitsaProlDataTermInteger alloc] initWithInt:(int) [((IOSObjectArray *) nil_chk(throwables_)) count]] } count:1 type:[IOSClass classWithClass:[ComIgormaznitsaProlDataTerm class]]]];
  [result setCarriedObjectWithJavaIoSerializable:self];
  return result;
}

- (NSString *)description {
  JavaLangStringBuilder *builder = [[JavaLangStringBuilder alloc] initWithNSString:[super description]];
  (void) [builder appendWithChar:'['];
  for (int li = 0; li < (int) [((IOSObjectArray *) nil_chk(throwables_)) count]; li++) {
    if (li > 0) {
      (void) [builder appendWithChar:','];
    }
    (void) [builder appendWithJavaLangCharSequence:builder];
  }
  (void) [builder appendWithChar:']'];
  return [builder description];
}

+ (void)initialize {
  if (self == [ComIgormaznitsaProlExceptionsProlForkExecutionException class]) {
    ComIgormaznitsaProlExceptionsProlForkExecutionException_ERROR_TERM_ = [[ComIgormaznitsaProlDataTerm alloc] initWithNSString:@"fork_error"];
  }
}

- (void)copyAllFieldsTo:(ComIgormaznitsaProlExceptionsProlForkExecutionException *)other {
  [super copyAllFieldsTo:other];
  other->throwables_ = throwables_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getThrowables", NULL, "[Ljava.lang.Throwable;", 0x1, NULL },
    { "initWithComIgormaznitsaProlDataTerm:withJavaLangThrowableArray:", "ProlForkExecutionException", NULL, 0x1, NULL },
    { "initWithNSString:withComIgormaznitsaProlDataTerm:withJavaLangThrowableArray:", "ProlForkExecutionException", NULL, 0x1, NULL },
    { "getFunctorForErrorStruct", NULL, "Lcom.igormaznitsa.prol.data.Term;", 0x1, NULL },
    { "getAsStruct", NULL, "Lcom.igormaznitsa.prol.data.TermStruct;", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "serialVersionUID_", NULL, 0x1a, "J" },
    { "ERROR_TERM_", NULL, 0x1a, "Lcom.igormaznitsa.prol.data.Term;" },
    { "throwables_", NULL, 0x12, "[Ljava.lang.Throwable;" },
  };
  static J2ObjcClassInfo _ComIgormaznitsaProlExceptionsProlForkExecutionException = { "ProlForkExecutionException", "com.igormaznitsa.prol.exceptions", NULL, 0x1, 6, methods, 3, fields, 0, NULL};
  return &_ComIgormaznitsaProlExceptionsProlForkExecutionException;
}

@end
