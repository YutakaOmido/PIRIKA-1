//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/igormaznitsa/prol/libraries/PredicateProcessor.java
//
//  Created by katsura on 14/04/13.
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/igormaznitsa/prol/annotations/Determined.h"
#include "com/igormaznitsa/prol/annotations/Evaluable.h"
#include "com/igormaznitsa/prol/annotations/ItChangesGoalChain.h"
#include "com/igormaznitsa/prol/data/Term.h"
#include "com/igormaznitsa/prol/data/TermStruct.h"
#include "com/igormaznitsa/prol/exceptions/ProlAbstractCatcheableException.h"
#include "com/igormaznitsa/prol/exceptions/ProlCriticalError.h"
#include "com/igormaznitsa/prol/exceptions/ProlEvaluationErrorException.h"
#include "com/igormaznitsa/prol/exceptions/ProlException.h"
#include "com/igormaznitsa/prol/exceptions/ProlInstantiationErrorException.h"
#include "com/igormaznitsa/prol/libraries/PredicateProcessor.h"
#include "com/igormaznitsa/prol/libraries/PredicateTemplate.h"
#include "com/igormaznitsa/prol/libraries/ProlAbstractLibrary.h"
#include "com/igormaznitsa/prol/logic/Goal.h"
#include "java/lang/ArithmeticException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/ThreadDeath.h"
#include "java/lang/Throwable.h"
#include "java/lang/Void.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"

@implementation ComIgormaznitsaProlLibrariesPredicateProcessor

static IOSClass * ComIgormaznitsaProlLibrariesPredicateProcessor_voidResultClass_;
static IOSClass * ComIgormaznitsaProlLibrariesPredicateProcessor_annotationDeterminedClass_;
static IOSClass * ComIgormaznitsaProlLibrariesPredicateProcessor_annotationEvaluableClass_;
static IOSClass * ComIgormaznitsaProlLibrariesPredicateProcessor_changesGoalChainClass_;
static ComIgormaznitsaProlLibrariesPredicateProcessor * ComIgormaznitsaProlLibrariesPredicateProcessor_NULL_PROCESSOR_;

+ (IOSClass *)voidResultClass {
  return ComIgormaznitsaProlLibrariesPredicateProcessor_voidResultClass_;
}

+ (IOSClass *)annotationDeterminedClass {
  return ComIgormaznitsaProlLibrariesPredicateProcessor_annotationDeterminedClass_;
}

+ (IOSClass *)annotationEvaluableClass {
  return ComIgormaznitsaProlLibrariesPredicateProcessor_annotationEvaluableClass_;
}

+ (IOSClass *)changesGoalChainClass {
  return ComIgormaznitsaProlLibrariesPredicateProcessor_changesGoalChainClass_;
}

+ (ComIgormaznitsaProlLibrariesPredicateProcessor *)NULL_PROCESSOR {
  return ComIgormaznitsaProlLibrariesPredicateProcessor_NULL_PROCESSOR_;
}

- (id)initWithComIgormaznitsaProlLibrariesProlAbstractLibrary:(ComIgormaznitsaProlLibrariesProlAbstractLibrary *)owner
                                                 withNSString:(NSString *)signature
                                    withJavaLangReflectMethod:(JavaLangReflectMethod *)method
      withComIgormaznitsaProlLibrariesPredicateTemplateArray2:(IOSObjectArray *)templates {
  if (self = [super init]) {
    self->predicateSignature_ = signature;
    self->ownerLibrary_ = owner;
    self->method_ = method;
    self->templates_ = templates;
    if (method == nil) {
      voidResult_ = YES;
      determined_ = YES;
      evaluable_ = NO;
      changesGoalChain_ = NO;
    }
    else {
      voidResult_ = [method getReturnType] == ComIgormaznitsaProlLibrariesPredicateProcessor_voidResultClass_;
      determined_ = [method isAnnotationPresentWithIOSClass:ComIgormaznitsaProlLibrariesPredicateProcessor_annotationDeterminedClass_];
      evaluable_ = [method isAnnotationPresentWithIOSClass:ComIgormaznitsaProlLibrariesPredicateProcessor_annotationEvaluableClass_];
      changesGoalChain_ = [method isAnnotationPresentWithIOSClass:ComIgormaznitsaProlLibrariesPredicateProcessor_changesGoalChainClass_];
    }
  }
  return self;
}

- (BOOL)doesChangeGoalChain {
  return changesGoalChain_;
}

- (BOOL)isDetermined {
  return determined_;
}

- (BOOL)isEvaluable {
  return evaluable_;
}

- (ComIgormaznitsaProlLibrariesProlAbstractLibrary *)getLibrary {
  return ownerLibrary_;
}

- (NSString *)getSignature {
  return predicateSignature_;
}

- (JavaLangReflectMethod *)getMethod {
  return method_;
}

- (IOSObjectArray *)getTemplates {
  return templates_;
}

- (IOSObjectArray *)checkTemplatesWithComIgormaznitsaProlDataTermStruct:(ComIgormaznitsaProlDataTermStruct *)predicate {
  IOSObjectArray *templatesarray = self->templates_;
  int len = (int) [((IOSObjectArray *) nil_chk(templatesarray)) count];
  IOSObjectArray *structelements = [((ComIgormaznitsaProlDataTermStruct *) nil_chk(predicate)) getElementsAsArray];
  int structElementsNumber = [predicate getArity];
  ComIgormaznitsaProlExceptionsProlInstantiationErrorException *lastException = nil;
  IOSObjectArray *result = nil;
  for (int li = 0; li < len; li++) {
    IOSObjectArray *curtemplate = IOSObjectArray_Get(templatesarray, li);
    int lencur = (int) [((IOSObjectArray *) nil_chk(curtemplate)) count];
    lastException = nil;
    IOSObjectArray *currentResult = nil;
    @try {
      if (lencur == structElementsNumber) {
        for (int ld = 0; ld < lencur; ld++) {
          ComIgormaznitsaProlLibrariesPredicateTemplate *curTemplate = IOSObjectArray_Get(curtemplate, ld);
          ComIgormaznitsaProlDataTerm *element = IOSObjectArray_Get(nil_chk(structelements), ld);
          if ([((ComIgormaznitsaProlLibrariesPredicateTemplate *) nil_chk(curTemplate)) checkWithComIgormaznitsaProlDataTerm:element]) {
            if (currentResult == nil) {
              currentResult = [IOSObjectArray arrayWithLength:lencur type:[IOSClass classWithClass:[ComIgormaznitsaProlDataTerm class]]];
            }
            (void) IOSObjectArray_Set(nil_chk(currentResult), ld, element);
          }
        }
      }
    }
    @catch (ComIgormaznitsaProlExceptionsProlInstantiationErrorException *ex) {
      lastException = ex;
    }
    if (lastException == nil) {
      result = currentResult;
      break;
    }
  }
  if (lastException != nil) {
    @throw lastException;
  }
  return result;
}

- (ComIgormaznitsaProlDataTerm *)executeEvaluableWithComIgormaznitsaProlLogicGoal:(ComIgormaznitsaProlLogicGoal *)goal
                                            withComIgormaznitsaProlDataTermStruct:(ComIgormaznitsaProlDataTermStruct *)predicate {
  @try {
    IOSObjectArray *nonchangeable = nil;
    if (templates_ != nil) {
      nonchangeable = [self checkTemplatesWithComIgormaznitsaProlDataTermStruct:predicate];
    }
    id result = nil;
    result = [((JavaLangReflectMethod *) nil_chk(method_)) invokeWithId:ownerLibrary_ withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ goal, predicate } count:2 type:[IOSClass classWithClass:[NSObject class]]]];
    if (nonchangeable != nil) {
      IOSObjectArray *elements = [((ComIgormaznitsaProlDataTermStruct *) nil_chk(predicate)) getElementsAsArray];
      int len = (int) [((IOSObjectArray *) nil_chk(elements)) count];
      for (int li = 0; li < len; li++) {
        if (IOSObjectArray_Get(nonchangeable, li) == nil) {
          continue;
        }
        if ([((ComIgormaznitsaProlDataTerm *) IOSObjectArray_Get(nonchangeable, li)) hasAnyDifferenceWithComIgormaznitsaProlDataTerm:IOSObjectArray_Get(elements, li)]) {
          @throw [[ComIgormaznitsaProlExceptionsProlInstantiationErrorException alloc] initWithNSString:[NSString stringWithFormat:@"Nonchangeable element was changed [%@<>%@]", IOSObjectArray_Get(nonchangeable, li), IOSObjectArray_Get(elements, li)] withComIgormaznitsaProlDataTerm:predicate];
        }
      }
    }
    return (ComIgormaznitsaProlDataTerm *) check_class_cast(result, [ComIgormaznitsaProlDataTerm class]);
  }
  @catch (JavaLangIllegalAccessException *ex) {
    @throw [[ComIgormaznitsaProlExceptionsProlCriticalError alloc] initWithNSString:[NSString stringWithFormat:@"Illegal access exception at %@", predicate] withJavaLangThrowable:ex];
  }
  @catch (JavaLangReflectInvocationTargetException *thr) {
    [((JavaLangReflectInvocationTargetException *) nil_chk(thr)) printStackTrace];
    JavaLangThrowable *cause = [thr getCause];
    if ([cause isKindOfClass:[JavaLangArithmeticException class]]) {
      @throw [[ComIgormaznitsaProlExceptionsProlEvaluationErrorException alloc] initWithNSString:[((JavaLangThrowable *) nil_chk(cause)) getMessage] withComIgormaznitsaProlDataTerm:predicate];
    }
    if ([cause isKindOfClass:[ComIgormaznitsaProlExceptionsProlAbstractCatcheableException class]]) {
      @throw (ComIgormaznitsaProlExceptionsProlAbstractCatcheableException *) check_class_cast(cause, [ComIgormaznitsaProlExceptionsProlAbstractCatcheableException class]);
    }
    if ([cause isKindOfClass:[ComIgormaznitsaProlExceptionsProlException class]]) {
      @throw (ComIgormaznitsaProlExceptionsProlException *) check_class_cast(cause, [ComIgormaznitsaProlExceptionsProlException class]);
    }
    @throw [[ComIgormaznitsaProlExceptionsProlCriticalError alloc] initWithNSString:[NSString stringWithFormat:@"Exception at [%@]", goal] withJavaLangThrowable:cause];
  }
}

- (BOOL)executeWithComIgormaznitsaProlLogicGoal:(ComIgormaznitsaProlLogicGoal *)goal
          withComIgormaznitsaProlDataTermStruct:(ComIgormaznitsaProlDataTermStruct *)predicate {
  @try {
    IOSObjectArray *nonchangeable = nil;
    if (templates_ != nil) {
      nonchangeable = [self checkTemplatesWithComIgormaznitsaProlDataTermStruct:predicate];
    }
    if (templates_ != nil) {
      (void) [self checkTemplatesWithComIgormaznitsaProlDataTermStruct:predicate];
    }
    id result = nil;
    result = [((JavaLangReflectMethod *) nil_chk(method_)) invokeWithId:ownerLibrary_ withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ goal, predicate } count:2 type:[IOSClass classWithClass:[NSObject class]]]];
    if (nonchangeable != nil) {
      IOSObjectArray *elements = [((ComIgormaznitsaProlDataTermStruct *) nil_chk(predicate)) getElementsAsArray];
      int len = (int) [((IOSObjectArray *) nil_chk(elements)) count];
      for (int li = 0; li < len; li++) {
        if (IOSObjectArray_Get(nonchangeable, li) == nil) {
          continue;
        }
        if ([((ComIgormaznitsaProlDataTerm *) IOSObjectArray_Get(nonchangeable, li)) hasAnyDifferenceWithComIgormaznitsaProlDataTerm:IOSObjectArray_Get(elements, li)]) {
          @throw [[ComIgormaznitsaProlExceptionsProlInstantiationErrorException alloc] initWithNSString:[NSString stringWithFormat:@"Nonchangeable element was changed [%@<>%@]", IOSObjectArray_Get(nonchangeable, li), IOSObjectArray_Get(elements, li)] withComIgormaznitsaProlDataTerm:predicate];
        }
      }
    }
    if (voidResult_) {
      return YES;
    }
    else if ([result isKindOfClass:[JavaLangBoolean class]]) {
      return [((JavaLangBoolean *) nil_chk((JavaLangBoolean *) check_class_cast(result, [JavaLangBoolean class]))) booleanValue];
    }
    else {
      return result != nil;
    }
  }
  @catch (JavaLangIllegalAccessException *ex) {
    @throw [[ComIgormaznitsaProlExceptionsProlException alloc] initWithNSString:[NSString stringWithFormat:@"Illegal access exception at %@", predicate] withJavaLangThrowable:ex];
  }
  @catch (JavaLangException *thr) {
    if ([thr isKindOfClass:[ComIgormaznitsaProlExceptionsProlException class]]) {
      @throw (ComIgormaznitsaProlExceptionsProlException *) check_class_cast(thr, [ComIgormaznitsaProlExceptionsProlException class]);
    }
    JavaLangThrowable *cause = [((JavaLangException *) nil_chk(thr)) getCause];
    if ([cause isKindOfClass:[JavaLangThreadDeath class]]) {
      @throw (JavaLangThreadDeath *) check_class_cast(cause, [JavaLangThreadDeath class]);
    }
    if ([cause isKindOfClass:[JavaLangInterruptedException class]]) {
      @throw (JavaLangInterruptedException *) check_class_cast(cause, [JavaLangInterruptedException class]);
    }
    if ([cause isKindOfClass:[ComIgormaznitsaProlExceptionsProlAbstractCatcheableException class]]) {
      @throw (ComIgormaznitsaProlExceptionsProlAbstractCatcheableException *) check_class_cast(cause, [ComIgormaznitsaProlExceptionsProlAbstractCatcheableException class]);
    }
    if ([cause isKindOfClass:[ComIgormaznitsaProlExceptionsProlException class]]) {
      @throw (ComIgormaznitsaProlExceptionsProlException *) check_class_cast(cause, [ComIgormaznitsaProlExceptionsProlException class]);
    }
    @throw [[ComIgormaznitsaProlExceptionsProlCriticalError alloc] initWithNSString:[NSString stringWithFormat:@"Exception at [%@]", goal] withJavaLangThrowable:cause];
  }
}

- (NSString *)description {
  return [NSString stringWithFormat:@"Predicate processor %@ %@", predicateSignature_, method_];
}

+ (void)initialize {
  if (self == [ComIgormaznitsaProlLibrariesPredicateProcessor class]) {
    ComIgormaznitsaProlLibrariesPredicateProcessor_voidResultClass_ = [IOSClass voidClass];
    ComIgormaznitsaProlLibrariesPredicateProcessor_annotationDeterminedClass_ = [IOSClass classWithProtocol:@protocol(ComIgormaznitsaProlAnnotationsDetermined)];
    ComIgormaznitsaProlLibrariesPredicateProcessor_annotationEvaluableClass_ = [IOSClass classWithProtocol:@protocol(ComIgormaznitsaProlAnnotationsEvaluable)];
    ComIgormaznitsaProlLibrariesPredicateProcessor_changesGoalChainClass_ = [IOSClass classWithProtocol:@protocol(ComIgormaznitsaProlAnnotationsItChangesGoalChain)];
    ComIgormaznitsaProlLibrariesPredicateProcessor_NULL_PROCESSOR_ = [[ComIgormaznitsaProlLibrariesPredicateProcessor alloc] initWithComIgormaznitsaProlLibrariesProlAbstractLibrary:nil withNSString:nil withJavaLangReflectMethod:nil withComIgormaznitsaProlLibrariesPredicateTemplateArray2:nil];
  }
}

- (void)copyAllFieldsTo:(ComIgormaznitsaProlLibrariesPredicateProcessor *)other {
  [super copyAllFieldsTo:other];
  other->changesGoalChain_ = changesGoalChain_;
  other->determined_ = determined_;
  other->evaluable_ = evaluable_;
  other->method_ = method_;
  other->ownerLibrary_ = ownerLibrary_;
  other->predicateSignature_ = predicateSignature_;
  other->templates_ = templates_;
  other->voidResult_ = voidResult_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithComIgormaznitsaProlLibrariesProlAbstractLibrary:withNSString:withJavaLangReflectMethod:withComIgormaznitsaProlLibrariesPredicateTemplateArray2:", "PredicateProcessor", NULL, 0x4, NULL },
    { "doesChangeGoalChain", NULL, "Z", 0x11, NULL },
    { "isDetermined", NULL, "Z", 0x11, NULL },
    { "isEvaluable", NULL, "Z", 0x11, NULL },
    { "getLibrary", NULL, "Lcom.igormaznitsa.prol.libraries.ProlAbstractLibrary;", 0x11, NULL },
    { "getSignature", NULL, "Ljava.lang.String;", 0x11, NULL },
    { "getMethod", NULL, "Ljava.lang.reflect.Method;", 0x11, NULL },
    { "getTemplates", NULL, "[[Lcom.igormaznitsa.prol.libraries.PredicateTemplate;", 0x1, NULL },
    { "checkTemplatesWithComIgormaznitsaProlDataTermStruct:", "checkTemplates", "[Lcom.igormaznitsa.prol.data.Term;", 0x12, NULL },
    { "executeEvaluableWithComIgormaznitsaProlLogicGoal:withComIgormaznitsaProlDataTermStruct:", "executeEvaluable", "Lcom.igormaznitsa.prol.data.Term;", 0x11, NULL },
    { "executeWithComIgormaznitsaProlLogicGoal:withComIgormaznitsaProlDataTermStruct:", "execute", "Z", 0x11, "Ljava.lang.InterruptedException;" },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "predicateSignature_", NULL, 0x12, "Ljava.lang.String;" },
    { "method_", NULL, 0x12, "Ljava.lang.reflect.Method;" },
    { "ownerLibrary_", NULL, 0x12, "Lcom.igormaznitsa.prol.libraries.ProlAbstractLibrary;" },
    { "voidResult_", NULL, 0x12, "Z" },
    { "determined_", NULL, 0x12, "Z" },
    { "evaluable_", NULL, 0x12, "Z" },
    { "changesGoalChain_", NULL, 0x12, "Z" },
    { "templates_", NULL, 0x12, "[[Lcom.igormaznitsa.prol.libraries.PredicateTemplate;" },
    { "voidResultClass_", NULL, 0x1a, "Ljava.lang.Class;" },
    { "annotationDeterminedClass_", NULL, 0x1a, "Ljava.lang.Class;" },
    { "annotationEvaluableClass_", NULL, 0x1a, "Ljava.lang.Class;" },
    { "changesGoalChainClass_", NULL, 0x1a, "Ljava.lang.Class;" },
    { "NULL_PROCESSOR_", NULL, 0x19, "Lcom.igormaznitsa.prol.libraries.PredicateProcessor;" },
  };
  static J2ObjcClassInfo _ComIgormaznitsaProlLibrariesPredicateProcessor = { "PredicateProcessor", "com.igormaznitsa.prol.libraries", NULL, 0x11, 12, methods, 13, fields, 0, NULL};
  return &_ComIgormaznitsaProlLibrariesPredicateProcessor;
}

@end
