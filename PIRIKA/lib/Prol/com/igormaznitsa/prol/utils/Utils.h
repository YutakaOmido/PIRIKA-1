//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/igormaznitsa/prol/utils/Utils.java
//
//  Created by katsura on 14/04/13.
//

#ifndef _ComIgormaznitsaProlUtilsUtils_H_
#define _ComIgormaznitsaProlUtilsUtils_H_

@class ComIgormaznitsaProlDataTerm;
@class ComIgormaznitsaProlDataTermList;
@class ComIgormaznitsaProlDataVar;
@class ComIgormaznitsaProlLogicProlContext;
@class IOSClass;
@class IOSObjectArray;
@class JavaIoPrintStream;
@class JavaLangThrowable;
@class JavaUtilLoggingLogger;
@protocol JavaUtilMap;

#import "JreEmulation.h"
#include "java/util/Comparator.h"

@interface ComIgormaznitsaProlUtilsUtils : NSObject {
}

+ (JavaUtilLoggingLogger *)LOG;
+ (id<JavaUtilComparator>)TERM_COMPARATOR;
- (id)init;
+ (id<JavaUtilMap>)fillTableWithVarsWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term;
+ (NSNumber *)getNumberFromElementWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term;
+ (NSString *)getStringFromElementWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term;
+ (JavaLangThrowable *)getRootThrowableWithJavaLangThrowable:(JavaLangThrowable *)ex;
+ (ComIgormaznitsaProlDataTerm *)getTermFromElementWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)element;
+ (ComIgormaznitsaProlDataTerm *)getListAsAtomWithComIgormaznitsaProlLogicProlContext:(ComIgormaznitsaProlLogicProlContext *)context
                                                  withComIgormaznitsaProlDataTermList:(ComIgormaznitsaProlDataTermList *)list;
+ (ComIgormaznitsaProlDataTermList *)arrayToListWithComIgormaznitsaProlDataTermArray:(IOSObjectArray *)array;
+ (IOSObjectArray *)listToArrayWithComIgormaznitsaProlDataTermList:(ComIgormaznitsaProlDataTermList *)list;
+ (ComIgormaznitsaProlDataTermList *)unrollTermIntoListWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)element;
+ (void)processTermForArrangeVariablesWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term
                                                      withJavaUtilMap:(id<JavaUtilMap>)variables;
+ (void)arrangeVariablesInsideTermsWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)termOne
                                   withComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)termTwo;
+ (void)printPredicatesForLibraryWithJavaIoPrintStream:(JavaIoPrintStream *)outArg
                                          withIOSClass:(IOSClass *)libraryClass;
+ (void)spacesWithJavaIoPrintStream:(JavaIoPrintStream *)outArg
                            withInt:(int)number;
+ (void)printTreeWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term;
+ (void)printTreeWithJavaIoPrintStream:(JavaIoPrintStream *)outArg
                               withInt:(int)spaces
       withComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term;
+ (void)printTermStateWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term;
+ (void)printTermStateWithJavaIoPrintStream:(JavaIoPrintStream *)outArg
            withComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term;
+ (NSString *)encodeTextSourceLikeWithNSString:(NSString *)string;
+ (void)consultFromURLConnectionWithNSString:(NSString *)url
     withComIgormaznitsaProlLogicProlContext:(ComIgormaznitsaProlLogicProlContext *)context;
+ (NSString *)extractPredicateSignatureFromStructureWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term;
+ (NSString *)normalizeSignatureWithNSString:(NSString *)signature;
+ (ComIgormaznitsaProlDataVar *)findVarInsideTermWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term
                                                                    withNSString:(NSString *)name;
+ (NSString *)validateSignatureWithNSString:(NSString *)signature;
@end

@interface ComIgormaznitsaProlUtilsUtils_$1 : NSObject < JavaUtilComparator > {
}

- (int)compareWithId:(ComIgormaznitsaProlDataTerm *)term1
              withId:(ComIgormaznitsaProlDataTerm *)term2;
- (id)init;
@end

#endif // _ComIgormaznitsaProlUtilsUtils_H_
