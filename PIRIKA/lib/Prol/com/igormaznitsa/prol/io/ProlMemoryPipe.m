//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: com/igormaznitsa/prol/io/ProlMemoryPipe.java
//
//  Created by katsura on 14/04/13.
//

#include "IOSByteArray.h"
#include "IOSClass.h"
#include "com/igormaznitsa/prol/data/Term.h"
#include "com/igormaznitsa/prol/data/TermInteger.h"
#include "com/igormaznitsa/prol/io/ProlMemoryPipe.h"
#include "com/igormaznitsa/prol/io/ProlTextInputStream.h"
#include "com/igormaznitsa/prol/io/ProlTextOutputStream.h"
#include "com/igormaznitsa/prol/io/ProlTextReader.h"
#include "com/igormaznitsa/prol/io/ProlTextWriter.h"
#include "com/igormaznitsa/prol/logic/ProlContext.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/PipedReader.h"
#include "java/io/PipedWriter.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/nio/charset/Charset.h"

@implementation ComIgormaznitsaProlIoProlMemoryPipe

- (id)initWithNSString:(NSString *)resourceId
withComIgormaznitsaProlLogicProlContext:(ComIgormaznitsaProlLogicProlContext *)context {
  if (self = [super init]) {
    if (resourceId == nil) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Resource identifier must not be null"];
    }
    if (context == nil) {
      @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:@"Context must not be null"];
    }
    self->resourceId_ = resourceId;
    self->context_ = context;
    JavaIoPipedWriter *pipeWriter = [[JavaIoPipedWriter alloc] init];
    JavaIoPipedReader *pipeReader = [[JavaIoPipedReader alloc] initWithJavaIoPipedWriter:pipeWriter];
    reader_ = [[ComIgormaznitsaProlIoProlTextInputStream alloc] initWithJavaIoReader:pipeReader withComIgormaznitsaProlLogicProlContext:context];
    writer_ = [[ComIgormaznitsaProlIoProlTextOutputStream alloc] initWithJavaIoWriter:pipeWriter withComIgormaznitsaProlLogicProlContext:context withBoolean:NO];
  }
  return self;
}

- (id<ComIgormaznitsaProlIoProlTextReader>)getReader {
  return reader_;
}

- (id<ComIgormaznitsaProlIoProlTextWriter>)getWriter {
  return writer_;
}

- (ComIgormaznitsaProlLogicProlContext *)getContext {
  return context_;
}

- (void)close {
  @synchronized (writer_) {
    [((ComIgormaznitsaProlIoProlTextOutputStream *) nil_chk(writer_)) close];
  }
  @synchronized (reader_) {
    [((ComIgormaznitsaProlIoProlTextInputStream *) nil_chk(reader_)) close];
  }
}

- (void)closeForWriteOnly {
  @synchronized (writer_) {
    [((ComIgormaznitsaProlIoProlTextOutputStream *) nil_chk(writer_)) close];
  }
}

- (NSString *)getResourceId {
  return resourceId_;
}

- (ComIgormaznitsaProlDataTerm *)getAsTerm {
  ComIgormaznitsaProlDataTerm *result = [[ComIgormaznitsaProlDataTerm alloc] initWithNSString:resourceId_];
  return result;
}

- (ComIgormaznitsaProlDataTerm *)readToken {
  @synchronized (reader_) {
    return [((ComIgormaznitsaProlIoProlTextInputStream *) nil_chk(reader_)) readToken];
  }
}

- (ComIgormaznitsaProlDataTerm *)readTerm {
  @synchronized (reader_) {
    return [((ComIgormaznitsaProlIoProlTextInputStream *) nil_chk(reader_)) readTerm];
  }
}

- (ComIgormaznitsaProlDataTermInteger *)readChar {
  @synchronized (reader_) {
    return [((ComIgormaznitsaProlIoProlTextInputStream *) nil_chk(reader_)) readChar];
  }
}

- (void)writeTermWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term {
  @synchronized (writer_) {
    [((ComIgormaznitsaProlIoProlTextOutputStream *) nil_chk(writer_)) writeTermWithComIgormaznitsaProlDataTerm:term];
  }
}

- (void)writeCharWithComIgormaznitsaProlDataTerm:(ComIgormaznitsaProlDataTerm *)term {
  @synchronized (writer_) {
    [((ComIgormaznitsaProlIoProlTextOutputStream *) nil_chk(writer_)) writeCharWithComIgormaznitsaProlDataTerm:term];
  }
}

- (NSString *)getAllDataAsStringWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return [NSString stringWithBytes:[self getAllDataAsByteArray] charset:charset];
}

- (IOSByteArray *)getAllDataAsByteArray {
  @synchronized (reader_) {
    JavaIoByteArrayOutputStream *buffer = [[JavaIoByteArrayOutputStream alloc] initWithInt:1024];
    while (YES) {
      int chr = [((NSNumber *) nil_chk([((ComIgormaznitsaProlDataTermInteger *) nil_chk([((ComIgormaznitsaProlIoProlTextInputStream *) nil_chk(reader_)) readChar])) getNumericValue])) intValue];
      if (chr < 0) {
        break;
      }
      [buffer writeWithInt:chr];
    }
    return [buffer toByteArray];
  }
}

- (void)copyAllFieldsTo:(ComIgormaznitsaProlIoProlMemoryPipe *)other {
  [super copyAllFieldsTo:other];
  other->context_ = context_;
  other->reader_ = reader_;
  other->resourceId_ = resourceId_;
  other->writer_ = writer_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withComIgormaznitsaProlLogicProlContext:", "ProlMemoryPipe", NULL, 0x1, "Ljava.io.IOException;" },
    { "getReader", NULL, "Lcom.igormaznitsa.prol.io.ProlTextReader;", 0x1, NULL },
    { "getWriter", NULL, "Lcom.igormaznitsa.prol.io.ProlTextWriter;", 0x1, NULL },
    { "getContext", NULL, "Lcom.igormaznitsa.prol.logic.ProlContext;", 0x1, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;" },
    { "closeForWriteOnly", NULL, "V", 0x1, "Ljava.io.IOException;" },
    { "getResourceId", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getAsTerm", NULL, "Lcom.igormaznitsa.prol.data.Term;", 0x1, NULL },
    { "readToken", NULL, "Lcom.igormaznitsa.prol.data.Term;", 0x1, "Ljava.io.IOException;" },
    { "readTerm", NULL, "Lcom.igormaznitsa.prol.data.Term;", 0x1, "Ljava.io.IOException;" },
    { "readChar", NULL, "Lcom.igormaznitsa.prol.data.TermInteger;", 0x1, "Ljava.io.IOException;" },
    { "writeTermWithComIgormaznitsaProlDataTerm:", "writeTerm", "V", 0x1, "Ljava.io.IOException;" },
    { "writeCharWithComIgormaznitsaProlDataTerm:", "writeChar", "V", 0x1, "Ljava.io.IOException;" },
    { "getAllDataAsStringWithJavaNioCharsetCharset:", "getAllDataAsString", "Ljava.lang.String;", 0x1, "Ljava.io.IOException;" },
    { "getAllDataAsByteArray", NULL, "[B", 0x1, "Ljava.io.IOException;" },
  };
  static J2ObjcFieldInfo fields[] = {
    { "resourceId_", NULL, 0x12, "Ljava.lang.String;" },
    { "context_", NULL, 0x12, "Lcom.igormaznitsa.prol.logic.ProlContext;" },
    { "reader_", NULL, 0x12, "Lcom.igormaznitsa.prol.io.ProlTextInputStream;" },
    { "writer_", NULL, 0x12, "Lcom.igormaznitsa.prol.io.ProlTextOutputStream;" },
  };
  static J2ObjcClassInfo _ComIgormaznitsaProlIoProlMemoryPipe = { "ProlMemoryPipe", "com.igormaznitsa.prol.io", NULL, 0x1, 15, methods, 4, fields, 0, NULL};
  return &_ComIgormaznitsaProlIoProlMemoryPipe;
}

@end
